@using babel_web_app.Lib.Results;
@model ResultsSummary

@{
    var baseCase = Model.Simulation.BaseCase;
    var variantCase = Model.Simulation.VariantCase;
    var summary = Model.OverallSummary;
}

<h1>Policy Difference Engine Demo</h1>
<p>Policy-making is complex. The Policy Difference Engine is an experiment that looks at potentially predicting at where impacts might be felt along regional or demographic lines if a policy change was to be made. This demo lets you model three possible changes that could be made to a particular policy.</p>

<div class="panel" id="content">
    <h2>Step 2. Simulation results</h2>
    <p>You changed some variables, and we created a simulated population of 100 individuals using mock data to show you who might be impacted by your changes. Try exploring the data here, or download for the tool of your choice.</p>
    <hr class="full"/>

    <!-- Base and Variant Case -->
    <div>
        <h3>Your Changes</h3>
        <table class="table">
            <thead>
                <th scope="col"></th>
                <th scope="col" class="text-center">Original Value</th>
                <th scope="col" class="text-center">Proposed Change</th>
            </thead>
            <tbody>
                <tr>
                    <td><b>Maximum Weekly Amount</b></td>
                    <td class="text-center">@String.Format("{0:C2}", baseCase.MaxWeeklyAmount)</td>
                    <td class="text-center">@String.Format("{0:C2}", variantCase.MaxWeeklyAmount)</td>
                </tr>
                <tr>
                    <td><b>Percentage of Average Income</b></td>
                    <td class="text-center">@String.Format("{0:N0}%", baseCase.Percentage)</td>
                    <td class="text-center">@String.Format("{0:N0}%", variantCase.Percentage)</td>
                </tr>
                <tr>
                    <td><b>Number of Eligible Weeks</b></td>
                    <td class="text-center">@baseCase.NumWeeks</td>
                    <td class="text-center">@variantCase.NumWeeks</td>
                </tr>
            </tbody>
        </table>
    </div>

    <hr class="full"/>

    <!-- Overall results -->
    <div>
        <h3>Overall Results</h3>
        <dl class="row">
            <dt class="col-sm-5">Sample Size</dt>
            <dd class="col-sm-7">@summary.SampleSize</dd>
            <dt class="col-sm-5">Percent Change in Cost</dt>
            <dd class="col-sm-7">@String.Format("{0:n1}%", summary.PercentChangeInCost)</dd>
            <dt class="col-sm-5">Average Entitlement Change</dt>
            <dd class="col-sm-7">@String.Format("{0:C2}", summary.AverageAmountChange)</dd>
            <dt class="col-sm-5">Average Percent Change</dt>
            <dd class="col-sm-7">@String.Format("{0:n1}%", summary.AveragePercentChange)</dd>
        </dl>
    </div>

    <hr class="full"/>

    <!-- Gained -->
    <div>
        <h3>People Who Gained Money</h3>
        <dl class="row">
            <dt class="col-sm-5">Percent of Sample that Gained Money</dt>
            <dd class="col-sm-7">@String.Format("{0:n1}%", summary.PercentThatGained)</dd>
            <dt class="col-sm-5">Average Entitlement Gain</dt>
            <dd class="col-sm-7">@String.Format("{0:C2}", summary.AverageAmountGained)</dd>
            <dt class="col-sm-5">Average Percent Gain</dt>
            <dd class="col-sm-7">@String.Format("{0:n1}%", summary.AveragePercentGained)</dd>
        </dl>
    </div>
    <hr class="full"/>

    <!-- Lost -->
    <div>
        <h3>People Who Lost Money</h3>
        <dl class="row">
            <dt class="col-sm-5">Percent of Sample that Lost Money</dt>
            <dd class="col-sm-7">@String.Format("{0:n1}%", summary.PercentThatLost)</dd>
            <dt class="col-sm-5">Average Entitlement Lost</dt>
            <dd class="col-sm-7">@String.Format("{0:C2}", summary.AverageAmountLost)</dd>
            <dt class="col-sm-5">Average Percent Lost</dt>
            <dd class="col-sm-7">@String.Format("{0:n1}%", summary.AveragePercentLost)</dd>
        </dl>
    </div>
    <hr class="full"/>

    @foreach (var aggSet in Model.Aggregations) {
        var agg = aggSet.Value;

    <div>
        <h3>Aggregation by @aggSet.Key</h3>
        <table class="table aggregation-table">
            <thead>
                <tr>
                    <th>Group</th>
                    <th>Sample Size</th>
                    <th>Sample Percent</th>
                    <th>Average Entitlement Change</th>
                    <th>Average Percent Change</th>
                    <th>Percent that Gained</th>
                    <th>Percent that Lost</th>
                    <th>Percent Unchanged</th> 
                </tr>
            </thead>
            <tbody>
                @foreach (var x in agg.GroupKeys) {
                    <tr>
                        <td>@x</td>
                        <td>@agg.TotalCountsDict[x]</td>
                        <td>@String.Format("{0:n0}%", agg.TotalPercentsDict[x])</td>
                        <td>@String.Format("{0:C2}", agg.AverageAmountChangeDict[x])</td>
                        <td>@String.Format("{0:n1}%", agg.AveragePercentChangeDict[x])</td>
                        <td>@String.Format("{0:n1}%", agg.PercentThatGainedDict[x])</td>
                        <td>@String.Format("{0:n1}%", agg.PercentThatLostDict[x])</td>
                        <td>@String.Format("{0:n1}%", agg.PercentUnchangedDict[x])</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <hr class="full"/>
    }
</div>
<br/><br/>


<style>
    #results-table_wrapper {
        width: 100% !important
    }
</style>